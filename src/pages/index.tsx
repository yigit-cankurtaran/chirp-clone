import { type NextPage } from "next";
import Head from "next/head";
import { SignInButton, UserButton, useUser } from "@clerk/nextjs";
import { SignIn } from "@clerk/nextjs";

import { RouterOutputs, api } from "~/utils/api";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";

dayjs.extend(relativeTime);

const CreatePostWizard = () => {
  const { user } = useUser();
  if (!user) return null;

  console.log(user);

  return (
    <div className="flex w-full gap-3">
      <UserButton />
      <input
        placeholder="Type some emojis!"
        className="grow bg-transparent outline-none"
      />
    </div>
  );
};

//trpc trick
type PostWithUser = RouterOutputs["posts"]["getAll"][number];
const PostView = (props: PostWithUser) => {
  const { post, author } = props;
  return (
    <div key={post.id} className="flex gap-3 border-b border-slate-400 p-4">
      <img
        src={author.profileImageUrl}
        alt="My pfp"
        className="h-8 w-8 rounded-full"
      />
      <div className="flex flex-col">
        <div className="flex gap-1 text-slate-300">
          <span>{`@${author.username}`}</span>
          <span className="font-thin">{`  â€¢ 1 hour ago`}</span>
          {/* this part will change with the dayjs */}
        </div>
        <span>{post.content}</span>
      </div>
    </div>
  );
};

const Home: NextPage = () => {
  const user = useUser();

  const { data, isLoading } = api.posts.getAll.useQuery();
  // TRPC lets you create functions that run on the server that can get data from anywhere.
  // The user should NEVER be able to access the database directly.

  if (!data || isLoading) {
    return <div>Loading...</div>;
  }

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="h-full w-full border-x border-slate-400 md:max-w-2xl">
          <div className="flex justify-center border-b border-slate-400 p-4">
            {" "}
            {!user.isSignedIn && <SignInButton />}
            {user.isSignedIn && <CreatePostWizard />}{" "}
          </div>
          <SignIn path="/sign-in" routing="path" signUpUrl="/sign-up" />
          <div className="flex flex-col">
            {data?.map((fullPost) => (
              <PostView {...fullPost} key={fullPost.post.id} />
            ))}
            {/* mapping stuff from the database into each post */}
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
